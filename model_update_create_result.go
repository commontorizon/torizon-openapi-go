/*
Torizon OTA

 This API is rate limited and will return the following headers for each API call.    - X-RateLimit-Limit - The total number of requests allowed within a time period   - X-RateLimit-Remaining - The total number of requests still allowed until the end of the rate limiting period   - X-RateLimit-Reset - The number of seconds until the limit is fully reset  In addition, if an API client is rate limited, it will receive a HTTP 420 response with the following header:     - Retry-After - The number of seconds to wait until this request is allowed  

API version: 2.0-Beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateCreateResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCreateResult{}

// UpdateCreateResult struct for UpdateCreateResult
type UpdateCreateResult struct {
	Affected []SimpleDeviceInfo `json:"affected,omitempty"`
	NotAffected []SimpleDeviceNotAffectedInfo `json:"notAffected,omitempty"`
}

// NewUpdateCreateResult instantiates a new UpdateCreateResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCreateResult() *UpdateCreateResult {
	this := UpdateCreateResult{}
	return &this
}

// NewUpdateCreateResultWithDefaults instantiates a new UpdateCreateResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCreateResultWithDefaults() *UpdateCreateResult {
	this := UpdateCreateResult{}
	return &this
}

// GetAffected returns the Affected field value if set, zero value otherwise.
func (o *UpdateCreateResult) GetAffected() []SimpleDeviceInfo {
	if o == nil || IsNil(o.Affected) {
		var ret []SimpleDeviceInfo
		return ret
	}
	return o.Affected
}

// GetAffectedOk returns a tuple with the Affected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCreateResult) GetAffectedOk() ([]SimpleDeviceInfo, bool) {
	if o == nil || IsNil(o.Affected) {
		return nil, false
	}
	return o.Affected, true
}

// HasAffected returns a boolean if a field has been set.
func (o *UpdateCreateResult) HasAffected() bool {
	if o != nil && !IsNil(o.Affected) {
		return true
	}

	return false
}

// SetAffected gets a reference to the given []SimpleDeviceInfo and assigns it to the Affected field.
func (o *UpdateCreateResult) SetAffected(v []SimpleDeviceInfo) {
	o.Affected = v
}

// GetNotAffected returns the NotAffected field value if set, zero value otherwise.
func (o *UpdateCreateResult) GetNotAffected() []SimpleDeviceNotAffectedInfo {
	if o == nil || IsNil(o.NotAffected) {
		var ret []SimpleDeviceNotAffectedInfo
		return ret
	}
	return o.NotAffected
}

// GetNotAffectedOk returns a tuple with the NotAffected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCreateResult) GetNotAffectedOk() ([]SimpleDeviceNotAffectedInfo, bool) {
	if o == nil || IsNil(o.NotAffected) {
		return nil, false
	}
	return o.NotAffected, true
}

// HasNotAffected returns a boolean if a field has been set.
func (o *UpdateCreateResult) HasNotAffected() bool {
	if o != nil && !IsNil(o.NotAffected) {
		return true
	}

	return false
}

// SetNotAffected gets a reference to the given []SimpleDeviceNotAffectedInfo and assigns it to the NotAffected field.
func (o *UpdateCreateResult) SetNotAffected(v []SimpleDeviceNotAffectedInfo) {
	o.NotAffected = v
}

func (o UpdateCreateResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCreateResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Affected) {
		toSerialize["affected"] = o.Affected
	}
	if !IsNil(o.NotAffected) {
		toSerialize["notAffected"] = o.NotAffected
	}
	return toSerialize, nil
}

type NullableUpdateCreateResult struct {
	value *UpdateCreateResult
	isSet bool
}

func (v NullableUpdateCreateResult) Get() *UpdateCreateResult {
	return v.value
}

func (v *NullableUpdateCreateResult) Set(val *UpdateCreateResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCreateResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCreateResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCreateResult(val *UpdateCreateResult) *NullableUpdateCreateResult {
	return &NullableUpdateCreateResult{value: val, isSet: true}
}

func (v NullableUpdateCreateResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCreateResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


