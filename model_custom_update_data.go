/*
Torizon OTA

 This API is rate limited and will return the following headers for each API call.    - X-RateLimit-Limit - The total number of requests allowed within a time period   - X-RateLimit-Remaining - The total number of requests still allowed until the end of the rate limiting period   - X-RateLimit-Reset - The number of seconds until the limit is fully reset  In addition, if an API client is rate limited, it will receive a HTTP 420 response with the following header:     - Retry-After - The number of seconds to wait until this request is allowed  

API version: 2.0-Beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CustomUpdateData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomUpdateData{}

// CustomUpdateData struct for CustomUpdateData
type CustomUpdateData struct {
	Uri NullableString `json:"uri,omitempty"`
	Metadata NullableString `json:"metadata,omitempty"`
}

// NewCustomUpdateData instantiates a new CustomUpdateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomUpdateData() *CustomUpdateData {
	this := CustomUpdateData{}
	return &this
}

// NewCustomUpdateDataWithDefaults instantiates a new CustomUpdateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomUpdateDataWithDefaults() *CustomUpdateData {
	this := CustomUpdateData{}
	return &this
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomUpdateData) GetUri() string {
	if o == nil || IsNil(o.Uri.Get()) {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomUpdateData) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *CustomUpdateData) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *CustomUpdateData) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *CustomUpdateData) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *CustomUpdateData) UnsetUri() {
	o.Uri.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomUpdateData) GetMetadata() string {
	if o == nil || IsNil(o.Metadata.Get()) {
		var ret string
		return ret
	}
	return *o.Metadata.Get()
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomUpdateData) GetMetadataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Metadata.Get(), o.Metadata.IsSet()
}

// HasMetadata returns a boolean if a field has been set.
func (o *CustomUpdateData) HasMetadata() bool {
	if o != nil && o.Metadata.IsSet() {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given NullableString and assigns it to the Metadata field.
func (o *CustomUpdateData) SetMetadata(v string) {
	o.Metadata.Set(&v)
}
// SetMetadataNil sets the value for Metadata to be an explicit nil
func (o *CustomUpdateData) SetMetadataNil() {
	o.Metadata.Set(nil)
}

// UnsetMetadata ensures that no value is present for Metadata, not even an explicit nil
func (o *CustomUpdateData) UnsetMetadata() {
	o.Metadata.Unset()
}

func (o CustomUpdateData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomUpdateData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	if o.Metadata.IsSet() {
		toSerialize["metadata"] = o.Metadata.Get()
	}
	return toSerialize, nil
}

type NullableCustomUpdateData struct {
	value *CustomUpdateData
	isSet bool
}

func (v NullableCustomUpdateData) Get() *CustomUpdateData {
	return v.value
}

func (v *NullableCustomUpdateData) Set(val *CustomUpdateData) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomUpdateData) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomUpdateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomUpdateData(val *CustomUpdateData) *NullableCustomUpdateData {
	return &NullableCustomUpdateData{value: val, isSet: true}
}

func (v NullableCustomUpdateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomUpdateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


